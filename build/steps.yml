steps:
- template: init.yml


- pwsh: ./build.ps1
  displayName: "Build all"
  workingDirectory: $(System.DefaultWorkingDirectory)/build


- pwsh: ./test.ps1
  displayName: "Test all"
  workingDirectory: $(System.DefaultWorkingDirectory)/build
  condition: and(succeeded(), ne(variables['Skip.Tests'], 'true'))


- pwsh: ./pack.ps1
  displayName: "Pack NuGets and VS Code"
  workingDirectory: $(System.DefaultWorkingDirectory)/build



##
# VisualStudio Extension can't be built from the build script as msbuild is not available).
##
#- task: NuGetCommand@2
#  displayName: 'Restore Visual Studio solution'
#  inputs:
#    command: 'restore'
#    restoreSolution: '$(System.DefaultWorkingDirectory)/VisualStudioExtension.sln'

- task: MSBuild@1
  displayName: 'Pack Visual Studio extension'
  inputs:
    msbuildVersion: 'latest'
    solution: '$(System.DefaultWorkingDirectory)/src/VisualStudioExtension/QsharpVSIX/QsharpVSIX.csproj'
    msbuildArguments: >
      /p:DefineConstants=$(Assembly.Constants) 
      /p:AssemblyVersion=$(Assembly.Version)
    configuration: $(Build.Configuration)

#- task: VSBuild@1
#  displayName: 'Pack Visual Studio extension'
#  inputs:
#    solution: '$(System.DefaultWorkingDirectory)/src/VisualStudioExtension/QsharpVSIX/QsharpVSIX.csproj'
#    msbuildArgs: >
#      /t:ResolveProjectReferences;CreateVsixContainer 
#      /p:DefineConstants=$(Assembly.Constants) 
#      /p:AssemblyVersion=$(Assembly.Version)
#    configuration: '$(Build.Configuration)'


- template: wrap-up.yml

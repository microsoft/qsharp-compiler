<Project Sdk="Microsoft.Quantum.Sdk/0.16.210426130-alpha">

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>netcoreapp3.1</TargetFramework>
  </PropertyGroup>

  <ItemGroup>
    <!-- These packages are included by the Sdk if QIR generation is enabled. -->
    <PackageReference Condition="$([MSBuild]::IsOsPlatform('Windows'))"
                      Include="libLLVM.runtime.win-x64" Version="11.0.0"
                      PrivateAssets="All" GeneratePathProperty="true" />
    <PackageReference Condition="$([MSBuild]::IsOsPlatform('OSX'))"
                      Include="libLLVM.runtime.osx-x64" Version="11.0.0"
                      PrivateAssets="All" GeneratePathProperty="true" />
    <PackageReference Condition="$([MSBuild]::IsOsPlatform('Linux')) And '$(UbuntuVersion)' == '18.04'"
                      Include="libLLVM.runtime.ubuntu.18.04-x64" Version="11.0.0"
                      PrivateAssets="All" GeneratePathProperty="true" />
    <PackageReference Condition="$([MSBuild]::IsOsPlatform('Linux')) And '$(UbuntuVersion)' != '18.04'"
                      Include="libLLVM.runtime.ubuntu.20.04-x64" Version="11.0.0"
                      PrivateAssets="All" GeneratePathProperty="true" />
  </ItemGroup>
    
  <PropertyGroup>
    <CSharpGeneration>false</CSharpGeneration>
    <QscExe>dotnet $(MSBuildThisFileDirectory)../../../src/QsCompiler/CommandLineTool/bin/$(Configuration)/netcoreapp3.1/qsc.dll</QscExe>
  </PropertyGroup>
    
  <ItemGroup>
    <UpToDateCheckInput Include="@(None)" />
    <None Include="$(QirOutputPath)**" />
    <Compile Remove="Main.cs" />
  </ItemGroup>
    
  <ItemGroup>
    <ProjectReference Include="..\..\..\src\QsCompiler\CommandLineTool\CommandLineTool.csproj">
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
    </ProjectReference>
    <ProjectReference Include="..\..\..\src\QsCompiler\QirGeneration\QirGeneration.csproj" IsQscReference="true" />
  </ItemGroup>

  <!--
  Providing these targets is usually not needed;
  we just do that here to make sure the Q# compilation is executed even when the Q# project did not change,
  and files with the generated QIR are deleted when the project is cleaned
  despite that we added them in a way that displays them as part of the project.
  -->

  <Target Name="CleanQir" AfterTargets="QSharpClean" DependsOnTargets="Restore">
    <ItemGroup>
      <_QirFilesToClean Include="$(QirOutputPath)**" />
      <None Remove="@(_QirFilesToClean)" />
    </ItemGroup>
    <Delete Files="@(_QirFilesToClean)" />
    <RemoveDir Directories="$(QirOutputPath)" />
  </Target>

  <Target Name="BeforeQSharpCompile" DependsOnTargets="QSharpClean">
    <Message Text="Removed files from prior compilation." Importance="High" />
  </Target>

  <Target Name="BeforeCSharpCompile">
    <ItemGroup>
      <Compile Include="Main.cs">
        <Visible>false</Visible>
      </Compile>
    </ItemGroup>
  </Target>

</Project>

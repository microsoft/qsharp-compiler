<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!-- Work around issues in MSBuild versions prior to 16.0. -->
  <PropertyGroup>
    <MSBuildAllProjects Condition=" '$(MSBuildVersion)' == '' Or '$(MSBuildVersion)' &lt; '16.0' ">
      $(MSBuildAllProjects);$(MSBuildThisFileFullPath)
    </MSBuildAllProjects>
  </PropertyGroup>

  <Import Project="$(MSBuildThisFileDirectory)../DefaultItems/DefaultItems.props"/>
  <Import Project="Sdk.props" Sdk="Microsoft.NET.Sdk"/>
  <Import Project="$(MSBuildThisFileDirectory)../ProjectSystem/ProjectSystem.props"/>


  <!-- The following item groups indeed needs to live in this file to ensure
  that they evaluated before the modifications in the project file are applied. -->

  <!-- Q# source files included by default. -->
  <ItemGroup>
    <QSharpCompile Include="**/*.qs" Exclude="obj/**" />
  </ItemGroup>

  <!-- Q# package references included by default. -->
  <ItemGroup>
    <!-- Packages and libraries included for all execution targets. -->
    <PackageReference Condition="$(IncludeQSharpCorePackages)" Include="Microsoft.Quantum.QSharp.Core" Version="0.16.210426130-alpha" />
    <PackageReference Condition="$(IncludeQSharpCorePackages)" Include="Microsoft.Quantum.Standard" Version="0.16.210426130-alpha" />
    <!-- Packages included for specific execution targets. -->
    <PackageReference Condition="'$(ResolvedProcessorArchitecture)' == 'HoneywellProcessor' And $(IncludeProviderPackages)" Include="Microsoft.Quantum.Providers.Honeywell" Version="0.16.210426130-alpha" />
    <PackageReference Condition="'$(ResolvedProcessorArchitecture)' == 'IonQProcessor' And $(IncludeProviderPackages)" Include="Microsoft.Quantum.Providers.IonQ" Version="0.16.210426130-alpha" />
    <PackageReference Condition="'$(ResolvedProcessorArchitecture)' == 'QCIProcessor' And $(IncludeProviderPackages)" Include="Microsoft.Quantum.Providers.QCI" Version="0.16.210426130-alpha" />
    <!-- TODO: uncomment once we are ready to use these packages.
    <PackageReference Condition="'$(ResolvedQuantumIntrinsics)' == 'Type1'" Include="Microsoft.Quantum.Type1.Core" Version="0.16.210426130-alpha" IsTargetPackage='true' />
    <PackageReference Condition="'$(ResolvedQuantumIntrinsics)' == 'Type2'" Include="Microsoft.Quantum.Type2.Core" Version="0.16.210426130-alpha" IsTargetPackage='true' />
    <PackageReference Condition="'$(ResolvedQuantumIntrinsics)' == 'Type3'" Include="Microsoft.Quantum.Type3.Core" Version="0.16.210426130-alpha" IsTargetPackage='true' />
    -->  
    </ItemGroup>

  <!-- Include the qir generation and docs generation compiler extensions if needed. -->
  <ItemGroup>
    <PackageReference Condition="$(QSharpDocsGeneration)"
                      Include="Microsoft.Quantum.DocumentationGenerator" Version="0.16.210426130-alpha"
                      IsImplicitlyDefined="true" 
                      IsQscReference="true" ExecutionTarget="Any" Priority="-1" PrivateAssets="All" />
    <PackageReference Condition="$(QirGeneration)"
                      Include="Microsoft.Quantum.QirGeneration" Version="0.16.210426130-alpha"
                      IsImplicitlyDefined="true" 
                      IsQscReference="true" ExecutionTarget="Any" Priority="-1" PrivateAssets="All" />
    <PackageReference Condition="$(QirGeneration) And $([MSBuild]::IsOsPlatform('Windows'))"
                      Include="libLLVM.runtime.win-x64" Version="11.0.0"
                      IsImplicitlyDefined="true" 
                      PrivateAssets="All" GeneratePathProperty="true" />
    <PackageReference Condition="$(QirGeneration) And $([MSBuild]::IsOsPlatform('OSX'))"
                      Include="libLLVM.runtime.osx-x64" Version="11.0.0"
                      IsImplicitlyDefined="true" 
                      PrivateAssets="All" GeneratePathProperty="true" />
    <PackageReference Condition="$(QirGeneration) And $([MSBuild]::IsOsPlatform('Linux')) And '$(UbuntuVersion)' == '18.04'"
                      Include="libLLVM.runtime.ubuntu.18.04-x64" Version="11.0.0"
                      IsImplicitlyDefined="true" 
                      PrivateAssets="All" GeneratePathProperty="true" />
    <PackageReference Condition="$(QirGeneration) And $([MSBuild]::IsOsPlatform('Linux')) And '$(UbuntuVersion)' != '18.04'"
                      Include="libLLVM.runtime.ubuntu.20.04-x64" Version="11.0.0"
                      IsImplicitlyDefined="true" 
                      PrivateAssets="All" GeneratePathProperty="true" />
  </ItemGroup>

  <!-- Packages for execution on the simulation framework. -->
  <ItemGroup>
    <PackageReference Condition="$(CSharpGeneration) And '$(ResolvedQSharpOutputType)' == 'QSharpExe'" 
                      Include="Microsoft.Quantum.Simulators" Version="0.16.210426130-alpha" IsImplicitlyDefined="true" />
    <PackageReference Condition="$(CSharpGeneration)" 
                      Include="Microsoft.Quantum.Runtime.Core" Version="0.16.210426130-alpha" IsImplicitlyDefined="true" />
    <PackageReference Condition="$(CSharpGeneration) And '$(ResolvedQSharpOutputType)' == 'QSharpExe'"
                      Include="Microsoft.Quantum.EntryPointDriver" Version="0.16.210426130-alpha" IsImplicitlyDefined="true" />
    <PackageReference Condition="$(CSharpGeneration)"
                      Include="Microsoft.Quantum.CSharpGeneration" Version="0.16.210426130-alpha" IsImplicitlyDefined="true"
                      IsQscReference="true" ExecutionTarget="Any" Priority="-1" PrivateAssets="All" />
  </ItemGroup>


  <!-- The following targets indeed need to live in this file since they are specifically defined
  to be executed at a certain stage in the build and thus serve as handles that a project may redefine. -->

  <!-- Empty target that can be redefined to run tasks just before QSharpCompile. -->
  <Target Name="BeforeQSharpCompile">
  </Target>

  <!-- Empty target that can be redefined to run tasks just before CSharpCompile. -->
  <Target Name="BeforeCSharpCompile">
  </Target>

</Project>

// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

namespace Microsoft.Quantum.Qir.Serialization;

enum DataType
{
    BoolType,
    IntegerType,
    DoubleType,
    PauliType,
    RangeType,
    ResultType,
    StringType,
    ArrayType
}

enum PauliValue
{
    PauliI,
    PauliX,
    PauliY,
    PauliZ
}

struct RangeValue
{
    5: int64 Start;

    10: int64 Step;

    15: int64 End;
}

enum ResultValue
{
    Zero,
    One
}

struct Parameter
{
    5: string Name;

    10: int32 Position;

    15: DataType Type = BoolType;

    20: nullable<DataType> ArrayType;
}

struct ArgumentValue
{
    5: DataType Type = BoolType;

    // Not null when Type is BoolType.
    10: nullable<bool> Bool;

    // Not null when Type is IntegerType.
    15: nullable<int64> Integer;

    // Not null when Type is DoubleType.
    20: nullable<double> Double;

    // Not null when Type is PauliType.
    25: nullable<PauliValue> Pauli;

    // Not null when Type is RangeType.
    30: nullable<RangeValue> Range;

    // Not null when Type is ResultType.
    35: nullable<ResultValue> Result;

    // Not null when Type is StringType.
    40: nullable<string> String;

    // Not null when Type is ArrayType.
    45: nullable<vector<ArgumentValue>> Array;
}

struct EntryPointOperation
{
    5: string Name;

    10: vector<Parameter> Parameters;
}

struct ExecutionInformation
{
    5: EntryPointOperation EntryPoint;

    10: map<string, ArgumentValue> ArgumentValues;
}

struct QirExecutionWrapper
{
    5: vector<ExecutionInformation> Executions;

    10: blob QirBytecode;
}

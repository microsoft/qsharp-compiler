namespace Microsoft.Quantum.Testing {
    Function pickM (p, d) : (Qubit => Result) {
        QsBody (p, d) {
            let twice = (LocalVariable d * DoubleLiteral 2.0);
            if (LocalVariable twice > DoubleLiteral 1.0) {
                if (LocalVariable p = PauliLiteral PauliZ) {
                    return GlobalCallable op0;
                }
            }
            return GlobalCallable M;
        }
    }

    Operation CNOT (q1, q2) : UnitType {
        QsAdjoint Intrinsic
        QsBody Intrinsic
        QsControlled Intrinsic
        QsControlledAdjoint Intrinsic
    }

    Operation M (q) : Result {
        QsBody Intrinsic
    }

    Operation Test () : UnitType {
        QsBody () {
            Allocate ((q1, q2, qs) = (Qubit(), Qubit(), new Qubit[IntLiteral 5L])) {
                ((Adjoint GlobalCallable CNOT) of (LocalVariable q1, LocalVariable qs[IntLiteral 0L]));
                (GlobalCallable CNOT of (LocalVariable q1, LocalVariable qs[IntLiteral 0L]));
                (GlobalCallable CNOT of (LocalVariable q1, LocalVariable qs[IntLiteral 0L]));
                (GlobalCallable CNOT of (LocalVariable q1, LocalVariable qs[IntLiteral 0L]));
                (GlobalCallable CNOT of (LocalVariable q1, LocalVariable qs[IntLiteral 1L]));
                (GlobalCallable CNOT of (LocalVariable q1, LocalVariable qs[IntLiteral 1L]));
                (GlobalCallable CNOT of (LocalVariable q1, LocalVariable qs[IntLiteral 1L]));
                (GlobalCallable CNOT of (LocalVariable q1, LocalVariable qs[IntLiteral 2L]));
                (GlobalCallable CNOT of (LocalVariable q1, LocalVariable qs[IntLiteral 2L]));
                (GlobalCallable CNOT of (LocalVariable q1, LocalVariable qs[IntLiteral 2L]));
                (GlobalCallable CNOT of (LocalVariable q1, LocalVariable qs[IntLiteral 3L]));
                (GlobalCallable CNOT of (LocalVariable q1, LocalVariable qs[IntLiteral 3L]));
                (GlobalCallable CNOT of (LocalVariable q1, LocalVariable qs[IntLiteral 3L]));
                (GlobalCallable CNOT of (LocalVariable q1, LocalVariable qs[IntLiteral 4L]));
                (GlobalCallable CNOT of (LocalVariable q1, LocalVariable qs[IntLiteral 4L]));
                (GlobalCallable CNOT of (LocalVariable q1, LocalVariable qs[IntLiteral 4L]));
                let r = (GlobalCallable M of LocalVariable q1);
                if (LocalVariable r = ResultLiteral One) {
                    let _ = (GlobalCallable op0 of LocalVariable qs[IntLiteral 0L]);
                    ((Adjoint GlobalCallable CNOT) of (LocalVariable q2, LocalVariable qs[IntLiteral 0L]));
                    (GlobalCallable CNOT of (LocalVariable q2, LocalVariable qs[IntLiteral 0L]));
                    (GlobalCallable CNOT of (LocalVariable q2, LocalVariable qs[IntLiteral 0L]));
                    (GlobalCallable CNOT of (LocalVariable q2, LocalVariable qs[IntLiteral 0L]));
                    (GlobalCallable CNOT of (LocalVariable q2, LocalVariable qs[IntLiteral 1L]));
                    (GlobalCallable CNOT of (LocalVariable q2, LocalVariable qs[IntLiteral 1L]));
                    (GlobalCallable CNOT of (LocalVariable q2, LocalVariable qs[IntLiteral 1L]));
                    (GlobalCallable CNOT of (LocalVariable q2, LocalVariable qs[IntLiteral 2L]));
                    (GlobalCallable CNOT of (LocalVariable q2, LocalVariable qs[IntLiteral 2L]));
                    (GlobalCallable CNOT of (LocalVariable q2, LocalVariable qs[IntLiteral 2L]));
                    (GlobalCallable CNOT of (LocalVariable q2, LocalVariable qs[IntLiteral 3L]));
                    (GlobalCallable CNOT of (LocalVariable q2, LocalVariable qs[IntLiteral 3L]));
                    (GlobalCallable CNOT of (LocalVariable q2, LocalVariable qs[IntLiteral 3L]));
                    (GlobalCallable CNOT of (LocalVariable q2, LocalVariable qs[IntLiteral 4L]));
                    (GlobalCallable CNOT of (LocalVariable q2, LocalVariable qs[IntLiteral 4L]));
                    (GlobalCallable CNOT of (LocalVariable q2, LocalVariable qs[IntLiteral 4L]));
                    let _ = (GlobalCallable op0 of LocalVariable qs[IntLiteral 2L]);
                    ((Adjoint GlobalCallable CNOT) of (LocalVariable q2, LocalVariable qs[IntLiteral 0L]));
                    (GlobalCallable CNOT of (LocalVariable q2, LocalVariable qs[IntLiteral 0L]));
                    (GlobalCallable CNOT of (LocalVariable q2, LocalVariable qs[IntLiteral 0L]));
                    (GlobalCallable CNOT of (LocalVariable q2, LocalVariable qs[IntLiteral 0L]));
                    (GlobalCallable CNOT of (LocalVariable q2, LocalVariable qs[IntLiteral 1L]));
                    (GlobalCallable CNOT of (LocalVariable q2, LocalVariable qs[IntLiteral 1L]));
                    (GlobalCallable CNOT of (LocalVariable q2, LocalVariable qs[IntLiteral 1L]));
                    (GlobalCallable CNOT of (LocalVariable q2, LocalVariable qs[IntLiteral 2L]));
                    (GlobalCallable CNOT of (LocalVariable q2, LocalVariable qs[IntLiteral 2L]));
                    (GlobalCallable CNOT of (LocalVariable q2, LocalVariable qs[IntLiteral 2L]));
                    (GlobalCallable CNOT of (LocalVariable q2, LocalVariable qs[IntLiteral 3L]));
                    (GlobalCallable CNOT of (LocalVariable q2, LocalVariable qs[IntLiteral 3L]));
                    (GlobalCallable CNOT of (LocalVariable q2, LocalVariable qs[IntLiteral 3L]));
                    (GlobalCallable CNOT of (LocalVariable q2, LocalVariable qs[IntLiteral 4L]));
                    (GlobalCallable CNOT of (LocalVariable q2, LocalVariable qs[IntLiteral 4L]));
                    (GlobalCallable CNOT of (LocalVariable q2, LocalVariable qs[IntLiteral 4L]));
                    let _ = (GlobalCallable op0 of LocalVariable qs[IntLiteral 4L]);
                    ((Adjoint GlobalCallable CNOT) of (LocalVariable q2, LocalVariable qs[IntLiteral 0L]));
                    (GlobalCallable CNOT of (LocalVariable q2, LocalVariable qs[IntLiteral 0L]));
                    (GlobalCallable CNOT of (LocalVariable q2, LocalVariable qs[IntLiteral 0L]));
                    (GlobalCallable CNOT of (LocalVariable q2, LocalVariable qs[IntLiteral 0L]));
                    (GlobalCallable CNOT of (LocalVariable q2, LocalVariable qs[IntLiteral 1L]));
                    (GlobalCallable CNOT of (LocalVariable q2, LocalVariable qs[IntLiteral 1L]));
                    (GlobalCallable CNOT of (LocalVariable q2, LocalVariable qs[IntLiteral 1L]));
                    (GlobalCallable CNOT of (LocalVariable q2, LocalVariable qs[IntLiteral 2L]));
                    (GlobalCallable CNOT of (LocalVariable q2, LocalVariable qs[IntLiteral 2L]));
                    (GlobalCallable CNOT of (LocalVariable q2, LocalVariable qs[IntLiteral 2L]));
                    (GlobalCallable CNOT of (LocalVariable q2, LocalVariable qs[IntLiteral 3L]));
                    (GlobalCallable CNOT of (LocalVariable q2, LocalVariable qs[IntLiteral 3L]));
                    (GlobalCallable CNOT of (LocalVariable q2, LocalVariable qs[IntLiteral 3L]));
                    (GlobalCallable CNOT of (LocalVariable q2, LocalVariable qs[IntLiteral 4L]));
                    (GlobalCallable CNOT of (LocalVariable q2, LocalVariable qs[IntLiteral 4L]));
                    (GlobalCallable CNOT of (LocalVariable q2, LocalVariable qs[IntLiteral 4L]));
                } else {
                    fail "r is supposed to be Zero";
                }
            }
        }
    }

    Operation op0 (q) : Result {
        QsBody (q) {
            repeat {
                mutable res = [ResultLiteral Zero, ResultLiteral Zero];
            }
            until (LocalVariable res[IntLiteral 0L] = ResultLiteral One)
            fixup {
                set LocalVariable res = (LocalVariable res w/= IntLiteral 0L <- ResultLiteral One);
            }
            return ResultLiteral One;
        }
    }

    Operation op1 (q1, r1) : UnitType {
        QsAdjoint Generated SelfInverse
        QsBody (q1, r1) {
            ((Adjoint GlobalCallable CNOT) of (LocalVariable q1, (Unwrap LocalVariable r1)[IntLiteral 0L]));
            for item in (Unwrap LocalVariable r1) {
                (GlobalCallable CNOT of (LocalVariable q1, LocalVariable item));
                (GlobalCallable CNOT of (LocalVariable q1, LocalVariable item));
                (GlobalCallable CNOT of (LocalVariable q1, LocalVariable item));
            }
        }
        QsControlled (__controlQubits__, (q1, r1)) {
            ((Controlled (Adjoint GlobalCallable CNOT)) of (LocalVariable __controlQubits__, (LocalVariable q1, (Unwrap LocalVariable r1)[IntLiteral 0L])));
            for item in (Unwrap LocalVariable r1) {
                ((Controlled GlobalCallable CNOT) of (LocalVariable __controlQubits__, (LocalVariable q1, LocalVariable item)));
                ((Controlled GlobalCallable CNOT) of (LocalVariable __controlQubits__, (LocalVariable q1, LocalVariable item)));
                ((Controlled GlobalCallable CNOT) of (LocalVariable __controlQubits__, (LocalVariable q1, LocalVariable item)));
            }
        }
        QsControlledAdjoint Generated SelfInverse
    }

    Operation op2 (q2, n2, b2, q) : UnitType {
        QsAdjoint (q2, n2, b2, q) {
            let r = (GlobalCallable op0 of LocalVariable q2);
            if (LocalVariable r = ResultLiteral One) {
                let _ = (GlobalCallable op0 of (Unwrap LocalVariable b2)[IntLiteral 5L]);
                ((Adjoint GlobalCallable CNOT) of ((Unwrap LocalVariable q), (Unwrap LocalVariable b2)[IntLiteral 0L]));
                for item in (Unwrap LocalVariable b2) {
                    (GlobalCallable CNOT of ((Unwrap LocalVariable q), LocalVariable item));
                    (GlobalCallable CNOT of ((Unwrap LocalVariable q), LocalVariable item));
                    (GlobalCallable CNOT of ((Unwrap LocalVariable q), LocalVariable item));
                }
                let _ = (GlobalCallable op0 of (Unwrap LocalVariable b2)[IntLiteral 4L]);
                ((Adjoint GlobalCallable CNOT) of ((Unwrap LocalVariable q), (Unwrap LocalVariable b2)[IntLiteral 0L]));
                for __qsVar1__item__ in (Unwrap LocalVariable b2) {
                    (GlobalCallable CNOT of ((Unwrap LocalVariable q), LocalVariable __qsVar1__item__));
                    (GlobalCallable CNOT of ((Unwrap LocalVariable q), LocalVariable __qsVar1__item__));
                    (GlobalCallable CNOT of ((Unwrap LocalVariable q), LocalVariable __qsVar1__item__));
                }
                let _ = (GlobalCallable op0 of (Unwrap LocalVariable b2)[IntLiteral 3L]);
                ((Adjoint GlobalCallable CNOT) of ((Unwrap LocalVariable q), (Unwrap LocalVariable b2)[IntLiteral 0L]));
                for __qsVar2__item__ in (Unwrap LocalVariable b2) {
                    (GlobalCallable CNOT of ((Unwrap LocalVariable q), LocalVariable __qsVar2__item__));
                    (GlobalCallable CNOT of ((Unwrap LocalVariable q), LocalVariable __qsVar2__item__));
                    (GlobalCallable CNOT of ((Unwrap LocalVariable q), LocalVariable __qsVar2__item__));
                }
                let _ = (GlobalCallable op0 of (Unwrap LocalVariable b2)[IntLiteral 2L]);
                ((Adjoint GlobalCallable CNOT) of ((Unwrap LocalVariable q), (Unwrap LocalVariable b2)[IntLiteral 0L]));
                for __qsVar3__item__ in (Unwrap LocalVariable b2) {
                    (GlobalCallable CNOT of ((Unwrap LocalVariable q), LocalVariable __qsVar3__item__));
                    (GlobalCallable CNOT of ((Unwrap LocalVariable q), LocalVariable __qsVar3__item__));
                    (GlobalCallable CNOT of ((Unwrap LocalVariable q), LocalVariable __qsVar3__item__));
                }
                let _ = (GlobalCallable op0 of (Unwrap LocalVariable b2)[IntLiteral 1L]);
                ((Adjoint GlobalCallable CNOT) of ((Unwrap LocalVariable q), (Unwrap LocalVariable b2)[IntLiteral 0L]));
                for __qsVar4__item__ in (Unwrap LocalVariable b2) {
                    (GlobalCallable CNOT of ((Unwrap LocalVariable q), LocalVariable __qsVar4__item__));
                    (GlobalCallable CNOT of ((Unwrap LocalVariable q), LocalVariable __qsVar4__item__));
                    (GlobalCallable CNOT of ((Unwrap LocalVariable q), LocalVariable __qsVar4__item__));
                }
                let _ = (GlobalCallable op0 of (Unwrap LocalVariable b2)[IntLiteral 0L]);
                ((Adjoint GlobalCallable CNOT) of ((Unwrap LocalVariable q), (Unwrap LocalVariable b2)[IntLiteral 0L]));
                for __qsVar5__item__ in (Unwrap LocalVariable b2) {
                    (GlobalCallable CNOT of ((Unwrap LocalVariable q), LocalVariable __qsVar5__item__));
                    (GlobalCallable CNOT of ((Unwrap LocalVariable q), LocalVariable __qsVar5__item__));
                    (GlobalCallable CNOT of ((Unwrap LocalVariable q), LocalVariable __qsVar5__item__));
                }
            }
            ((Adjoint GlobalCallable CNOT) of (LocalVariable q2, (Unwrap LocalVariable b2)[IntLiteral 0L]));
            for __qsVar6__item__ in (Unwrap LocalVariable b2) {
                (GlobalCallable CNOT of (LocalVariable q2, LocalVariable __qsVar6__item__));
                (GlobalCallable CNOT of (LocalVariable q2, LocalVariable __qsVar6__item__));
                (GlobalCallable CNOT of (LocalVariable q2, LocalVariable __qsVar6__item__));
            }
        }
        QsBody (q2, n2, b2, q) {
            ((Adjoint GlobalCallable CNOT) of (LocalVariable q2, (Unwrap LocalVariable b2)[IntLiteral 0L]));
            for item in (Unwrap LocalVariable b2) {
                (GlobalCallable CNOT of (LocalVariable q2, LocalVariable item));
                (GlobalCallable CNOT of (LocalVariable q2, LocalVariable item));
                (GlobalCallable CNOT of (LocalVariable q2, LocalVariable item));
            }
            let r = (GlobalCallable M of LocalVariable q2);
            if (LocalVariable r = ResultLiteral One) {
                let _ = (GlobalCallable op0 of (Unwrap LocalVariable b2)[IntLiteral 0L]);
                ((Adjoint GlobalCallable CNOT) of ((Unwrap LocalVariable q), (Unwrap LocalVariable b2)[IntLiteral 0L]));
                for __qsVar1__item__ in (Unwrap LocalVariable b2) {
                    (GlobalCallable CNOT of ((Unwrap LocalVariable q), LocalVariable __qsVar1__item__));
                    (GlobalCallable CNOT of ((Unwrap LocalVariable q), LocalVariable __qsVar1__item__));
                    (GlobalCallable CNOT of ((Unwrap LocalVariable q), LocalVariable __qsVar1__item__));
                }
                let _ = (GlobalCallable op0 of (Unwrap LocalVariable b2)[IntLiteral 2L]);
                ((Adjoint GlobalCallable CNOT) of ((Unwrap LocalVariable q), (Unwrap LocalVariable b2)[IntLiteral 0L]));
                for __qsVar2__item__ in (Unwrap LocalVariable b2) {
                    (GlobalCallable CNOT of ((Unwrap LocalVariable q), LocalVariable __qsVar2__item__));
                    (GlobalCallable CNOT of ((Unwrap LocalVariable q), LocalVariable __qsVar2__item__));
                    (GlobalCallable CNOT of ((Unwrap LocalVariable q), LocalVariable __qsVar2__item__));
                }
                let _ = (GlobalCallable op0 of (Unwrap LocalVariable b2)[IntLiteral 4L]);
                ((Adjoint GlobalCallable CNOT) of ((Unwrap LocalVariable q), (Unwrap LocalVariable b2)[IntLiteral 0L]));
                for __qsVar3__item__ in (Unwrap LocalVariable b2) {
                    (GlobalCallable CNOT of ((Unwrap LocalVariable q), LocalVariable __qsVar3__item__));
                    (GlobalCallable CNOT of ((Unwrap LocalVariable q), LocalVariable __qsVar3__item__));
                    (GlobalCallable CNOT of ((Unwrap LocalVariable q), LocalVariable __qsVar3__item__));
                }
            } else {
                fail "r is supposed to be Zero";
            }
        }
        QsControlled (ctrls, (q2, n2, b2, q)) {
            ((Controlled (Adjoint GlobalCallable CNOT)) of (LocalVariable ctrls, (LocalVariable q2, (Unwrap LocalVariable b2)[IntLiteral 0L])));
            for item in (Unwrap LocalVariable b2) {
                ((Controlled GlobalCallable CNOT) of (LocalVariable ctrls, (LocalVariable q2, LocalVariable item)));
                ((Controlled GlobalCallable CNOT) of (LocalVariable ctrls, (LocalVariable q2, LocalVariable item)));
                ((Controlled GlobalCallable CNOT) of (LocalVariable ctrls, (LocalVariable q2, LocalVariable item)));
            }
            let r = (GlobalCallable M of LocalVariable q2);
            if (LocalVariable r = ResultLiteral One) {
                let _ = (GlobalCallable op0 of (Unwrap LocalVariable b2)[IntLiteral 0L]);
                ((Controlled (Adjoint GlobalCallable CNOT)) of (LocalVariable ctrls, ((Unwrap LocalVariable q), (Unwrap LocalVariable b2)[IntLiteral 0L])));
                for __qsVar1__item__ in (Unwrap LocalVariable b2) {
                    ((Controlled GlobalCallable CNOT) of (LocalVariable ctrls, ((Unwrap LocalVariable q), LocalVariable __qsVar1__item__)));
                    ((Controlled GlobalCallable CNOT) of (LocalVariable ctrls, ((Unwrap LocalVariable q), LocalVariable __qsVar1__item__)));
                    ((Controlled GlobalCallable CNOT) of (LocalVariable ctrls, ((Unwrap LocalVariable q), LocalVariable __qsVar1__item__)));
                }
                let _ = (GlobalCallable op0 of (Unwrap LocalVariable b2)[IntLiteral 1L]);
                ((Controlled (Adjoint GlobalCallable CNOT)) of (LocalVariable ctrls, ((Unwrap LocalVariable q), (Unwrap LocalVariable b2)[IntLiteral 0L])));
                for __qsVar2__item__ in (Unwrap LocalVariable b2) {
                    ((Controlled GlobalCallable CNOT) of (LocalVariable ctrls, ((Unwrap LocalVariable q), LocalVariable __qsVar2__item__)));
                    ((Controlled GlobalCallable CNOT) of (LocalVariable ctrls, ((Unwrap LocalVariable q), LocalVariable __qsVar2__item__)));
                    ((Controlled GlobalCallable CNOT) of (LocalVariable ctrls, ((Unwrap LocalVariable q), LocalVariable __qsVar2__item__)));
                }
                let _ = (GlobalCallable op0 of (Unwrap LocalVariable b2)[IntLiteral 2L]);
                ((Controlled (Adjoint GlobalCallable CNOT)) of (LocalVariable ctrls, ((Unwrap LocalVariable q), (Unwrap LocalVariable b2)[IntLiteral 0L])));
                for __qsVar3__item__ in (Unwrap LocalVariable b2) {
                    ((Controlled GlobalCallable CNOT) of (LocalVariable ctrls, ((Unwrap LocalVariable q), LocalVariable __qsVar3__item__)));
                    ((Controlled GlobalCallable CNOT) of (LocalVariable ctrls, ((Unwrap LocalVariable q), LocalVariable __qsVar3__item__)));
                    ((Controlled GlobalCallable CNOT) of (LocalVariable ctrls, ((Unwrap LocalVariable q), LocalVariable __qsVar3__item__)));
                }
                let _ = (GlobalCallable op0 of (Unwrap LocalVariable b2)[IntLiteral 3L]);
                ((Controlled (Adjoint GlobalCallable CNOT)) of (LocalVariable ctrls, ((Unwrap LocalVariable q), (Unwrap LocalVariable b2)[IntLiteral 0L])));
                for __qsVar4__item__ in (Unwrap LocalVariable b2) {
                    ((Controlled GlobalCallable CNOT) of (LocalVariable ctrls, ((Unwrap LocalVariable q), LocalVariable __qsVar4__item__)));
                    ((Controlled GlobalCallable CNOT) of (LocalVariable ctrls, ((Unwrap LocalVariable q), LocalVariable __qsVar4__item__)));
                    ((Controlled GlobalCallable CNOT) of (LocalVariable ctrls, ((Unwrap LocalVariable q), LocalVariable __qsVar4__item__)));
                }
                let _ = (GlobalCallable op0 of (Unwrap LocalVariable b2)[IntLiteral 4L]);
                ((Controlled (Adjoint GlobalCallable CNOT)) of (LocalVariable ctrls, ((Unwrap LocalVariable q), (Unwrap LocalVariable b2)[IntLiteral 0L])));
                for __qsVar5__item__ in (Unwrap LocalVariable b2) {
                    ((Controlled GlobalCallable CNOT) of (LocalVariable ctrls, ((Unwrap LocalVariable q), LocalVariable __qsVar5__item__)));
                    ((Controlled GlobalCallable CNOT) of (LocalVariable ctrls, ((Unwrap LocalVariable q), LocalVariable __qsVar5__item__)));
                    ((Controlled GlobalCallable CNOT) of (LocalVariable ctrls, ((Unwrap LocalVariable q), LocalVariable __qsVar5__item__)));
                }
                let _ = (GlobalCallable op0 of (Unwrap LocalVariable b2)[IntLiteral 5L]);
                ((Controlled (Adjoint GlobalCallable CNOT)) of (LocalVariable ctrls, ((Unwrap LocalVariable q), (Unwrap LocalVariable b2)[IntLiteral 0L])));
                for __qsVar6__item__ in (Unwrap LocalVariable b2) {
                    ((Controlled GlobalCallable CNOT) of (LocalVariable ctrls, ((Unwrap LocalVariable q), LocalVariable __qsVar6__item__)));
                    ((Controlled GlobalCallable CNOT) of (LocalVariable ctrls, ((Unwrap LocalVariable q), LocalVariable __qsVar6__item__)));
                    ((Controlled GlobalCallable CNOT) of (LocalVariable ctrls, ((Unwrap LocalVariable q), LocalVariable __qsVar6__item__)));
                }
            }
        }
        QsControlledAdjoint (ctrls, (q2, n2, b2, q)) {
            ((Controlled (Adjoint GlobalCallable CNOT)) of (LocalVariable ctrls, (LocalVariable q2, (Unwrap LocalVariable b2)[IntLiteral 0L])));
            for item in (Unwrap LocalVariable b2) {
                ((Controlled GlobalCallable CNOT) of (LocalVariable ctrls, (LocalVariable q2, LocalVariable item)));
                ((Controlled GlobalCallable CNOT) of (LocalVariable ctrls, (LocalVariable q2, LocalVariable item)));
                ((Controlled GlobalCallable CNOT) of (LocalVariable ctrls, (LocalVariable q2, LocalVariable item)));
            }
        }
    }

    TypeConstructor BigEndianRegister (__Item1__) : BigEndianRegister {
        QsBody Intrinsic
    }

    TypeConstructor OtherTuple (__Item1__, __Item2__) : OtherTuple {
        QsBody Intrinsic
    }

    TypeConstructor OtherType (__Item1__, __Item2__) : OtherType {
        QsBody Intrinsic
    }

    TypeConstructor QubitAlias (__Item1__) : QubitAlias {
        QsBody Intrinsic
    }

    newtype BigEndianRegister = Qubit[];

    newtype OtherTuple = (OtherType, Int);

    newtype OtherType = (Int, Qubit[]);

    newtype QubitAlias = Qubit;
}
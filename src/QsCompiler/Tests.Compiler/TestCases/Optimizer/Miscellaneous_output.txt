namespace Microsoft.Quantum.Testing {
    Function pickM (p, d) : (Qubit => Result) {
        QsBody (p, d) {
            let twice = (LocalVariable d * DoubleLiteral 2.0);
            if (LocalVariable twice > DoubleLiteral 1.0) {
                if (LocalVariable p = PauliLiteral PauliZ) {
                    return GlobalCallable op0;
                }
            }
            return GlobalCallable M;
        }
    }

    Operation CNOT (q1, q2) : UnitType {
        QsAdjoint Intrinsic
        QsBody Intrinsic
        QsControlled Intrinsic
        QsControlledAdjoint Intrinsic
    }

    Operation M (q) : Result {
        QsBody Intrinsic
    }

    Operation op0 (q) : Result {
        QsBody (q) {
            repeat {
                mutable res = [ResultLiteral Zero, ResultLiteral Zero];
            }
            until (LocalVariable res[IntLiteral 0L] = ResultLiteral One)
            fixup {
                set LocalVariable res = (LocalVariable res w/= IntLiteral 0L <- ResultLiteral One);
            }
            Allocate (_ = new Qubit[IntLiteral 4L]) {
                return ResultLiteral One;
            }
        }
    }

    Operation op1 (q1, r1) : UnitType {
        QsAdjoint Generated SelfInverse
        QsBody (q1, r1) {
            let q2 = (Unwrap LocalVariable r1)[IntLiteral 0L];
            ((Adjoint GlobalCallable CNOT) of (LocalVariable q1, LocalVariable q2));
            for item in (Unwrap LocalVariable r1) {
                (GlobalCallable CNOT of (LocalVariable q1, LocalVariable item));
                (GlobalCallable CNOT of (LocalVariable q1, LocalVariable item));
                (GlobalCallable CNOT of (LocalVariable q1, LocalVariable item));
            }
        }
        QsControlled (__controlQubits__, (q1, r1)) {
            let q2 = (Unwrap LocalVariable r1)[IntLiteral 0L];
            ((Controlled (Adjoint GlobalCallable CNOT)) of (LocalVariable __controlQubits__, (LocalVariable q1, LocalVariable q2)));
            for item in (Unwrap LocalVariable r1) {
                ((Controlled GlobalCallable CNOT) of (LocalVariable __controlQubits__, (LocalVariable q1, LocalVariable item)));
                ((Controlled GlobalCallable CNOT) of (LocalVariable __controlQubits__, (LocalVariable q1, LocalVariable item)));
                ((Controlled GlobalCallable CNOT) of (LocalVariable __controlQubits__, (LocalVariable q1, LocalVariable item)));
            }
        }
        QsControlledAdjoint Generated SelfInverse
    }

    Operation op2 (q2, n2, b2, q) : UnitType {
        QsAdjoint (q2, n2, b2, q) {
            let r = (GlobalCallable op0 of LocalVariable q2);
            if (LocalVariable r = ResultLiteral One) {
                let _ = (GlobalCallable op0 of (Unwrap LocalVariable b2)[IntLiteral 5L]);
                let q1 = (Unwrap LocalVariable q);
                let r1 = LocalVariable b2;
                let __qsVar1__q2__ = (Unwrap LocalVariable r1)[IntLiteral 0L];
                ((Adjoint GlobalCallable CNOT) of (LocalVariable q1, LocalVariable __qsVar1__q2__));
                for item in (Unwrap LocalVariable r1) {
                    (GlobalCallable CNOT of (LocalVariable q1, LocalVariable item));
                    (GlobalCallable CNOT of (LocalVariable q1, LocalVariable item));
                    (GlobalCallable CNOT of (LocalVariable q1, LocalVariable item));
                }
                let _ = (GlobalCallable op0 of (Unwrap LocalVariable b2)[IntLiteral 4L]);
                let __qsVar1__q1__ = (Unwrap LocalVariable q);
                let __qsVar1__r1__ = LocalVariable b2;
                let __qsVar2__q2__ = (Unwrap LocalVariable __qsVar1__r1__)[IntLiteral 0L];
                ((Adjoint GlobalCallable CNOT) of (LocalVariable __qsVar1__q1__, LocalVariable __qsVar2__q2__));
                for __qsVar1__item__ in (Unwrap LocalVariable __qsVar1__r1__) {
                    (GlobalCallable CNOT of (LocalVariable __qsVar1__q1__, LocalVariable __qsVar1__item__));
                    (GlobalCallable CNOT of (LocalVariable __qsVar1__q1__, LocalVariable __qsVar1__item__));
                    (GlobalCallable CNOT of (LocalVariable __qsVar1__q1__, LocalVariable __qsVar1__item__));
                }
                let _ = (GlobalCallable op0 of (Unwrap LocalVariable b2)[IntLiteral 3L]);
                let __qsVar2__q1__ = (Unwrap LocalVariable q);
                let __qsVar2__r1__ = LocalVariable b2;
                let __qsVar3__q2__ = (Unwrap LocalVariable __qsVar2__r1__)[IntLiteral 0L];
                ((Adjoint GlobalCallable CNOT) of (LocalVariable __qsVar2__q1__, LocalVariable __qsVar3__q2__));
                for __qsVar2__item__ in (Unwrap LocalVariable __qsVar2__r1__) {
                    (GlobalCallable CNOT of (LocalVariable __qsVar2__q1__, LocalVariable __qsVar2__item__));
                    (GlobalCallable CNOT of (LocalVariable __qsVar2__q1__, LocalVariable __qsVar2__item__));
                    (GlobalCallable CNOT of (LocalVariable __qsVar2__q1__, LocalVariable __qsVar2__item__));
                }
                let _ = (GlobalCallable op0 of (Unwrap LocalVariable b2)[IntLiteral 2L]);
                let __qsVar3__q1__ = (Unwrap LocalVariable q);
                let __qsVar3__r1__ = LocalVariable b2;
                let __qsVar4__q2__ = (Unwrap LocalVariable __qsVar3__r1__)[IntLiteral 0L];
                ((Adjoint GlobalCallable CNOT) of (LocalVariable __qsVar3__q1__, LocalVariable __qsVar4__q2__));
                for __qsVar3__item__ in (Unwrap LocalVariable __qsVar3__r1__) {
                    (GlobalCallable CNOT of (LocalVariable __qsVar3__q1__, LocalVariable __qsVar3__item__));
                    (GlobalCallable CNOT of (LocalVariable __qsVar3__q1__, LocalVariable __qsVar3__item__));
                    (GlobalCallable CNOT of (LocalVariable __qsVar3__q1__, LocalVariable __qsVar3__item__));
                }
                let _ = (GlobalCallable op0 of (Unwrap LocalVariable b2)[IntLiteral 1L]);
                let __qsVar4__q1__ = (Unwrap LocalVariable q);
                let __qsVar4__r1__ = LocalVariable b2;
                let __qsVar5__q2__ = (Unwrap LocalVariable __qsVar4__r1__)[IntLiteral 0L];
                ((Adjoint GlobalCallable CNOT) of (LocalVariable __qsVar4__q1__, LocalVariable __qsVar5__q2__));
                for __qsVar4__item__ in (Unwrap LocalVariable __qsVar4__r1__) {
                    (GlobalCallable CNOT of (LocalVariable __qsVar4__q1__, LocalVariable __qsVar4__item__));
                    (GlobalCallable CNOT of (LocalVariable __qsVar4__q1__, LocalVariable __qsVar4__item__));
                    (GlobalCallable CNOT of (LocalVariable __qsVar4__q1__, LocalVariable __qsVar4__item__));
                }
                let _ = (GlobalCallable op0 of (Unwrap LocalVariable b2)[IntLiteral 0L]);
                let __qsVar5__q1__ = (Unwrap LocalVariable q);
                let __qsVar5__r1__ = LocalVariable b2;
                let __qsVar6__q2__ = (Unwrap LocalVariable __qsVar5__r1__)[IntLiteral 0L];
                ((Adjoint GlobalCallable CNOT) of (LocalVariable __qsVar5__q1__, LocalVariable __qsVar6__q2__));
                for __qsVar5__item__ in (Unwrap LocalVariable __qsVar5__r1__) {
                    (GlobalCallable CNOT of (LocalVariable __qsVar5__q1__, LocalVariable __qsVar5__item__));
                    (GlobalCallable CNOT of (LocalVariable __qsVar5__q1__, LocalVariable __qsVar5__item__));
                    (GlobalCallable CNOT of (LocalVariable __qsVar5__q1__, LocalVariable __qsVar5__item__));
                }
            }
            let __qsVar6__q1__ = LocalVariable q2;
            let __qsVar6__r1__ = LocalVariable b2;
            let __qsVar7__q2__ = (Unwrap LocalVariable __qsVar6__r1__)[IntLiteral 0L];
            ((Adjoint GlobalCallable CNOT) of (LocalVariable __qsVar6__q1__, LocalVariable __qsVar7__q2__));
            for __qsVar6__item__ in (Unwrap LocalVariable __qsVar6__r1__) {
                (GlobalCallable CNOT of (LocalVariable __qsVar6__q1__, LocalVariable __qsVar6__item__));
                (GlobalCallable CNOT of (LocalVariable __qsVar6__q1__, LocalVariable __qsVar6__item__));
                (GlobalCallable CNOT of (LocalVariable __qsVar6__q1__, LocalVariable __qsVar6__item__));
            }
        }
        QsBody (q2, n2, b2, q) {
            let q1 = LocalVariable q2;
            let r1 = LocalVariable b2;
            let __qsVar1__q2__ = (Unwrap LocalVariable r1)[IntLiteral 0L];
            ((Adjoint GlobalCallable CNOT) of (LocalVariable q1, LocalVariable __qsVar1__q2__));
            for item in (Unwrap LocalVariable r1) {
                (GlobalCallable CNOT of (LocalVariable q1, LocalVariable item));
                (GlobalCallable CNOT of (LocalVariable q1, LocalVariable item));
                (GlobalCallable CNOT of (LocalVariable q1, LocalVariable item));
            }
            let r = (GlobalCallable M of LocalVariable q2);
            if (LocalVariable r = ResultLiteral One) {
                let _ = (GlobalCallable op0 of (Unwrap LocalVariable b2)[IntLiteral 0L]);
                let __qsVar1__q1__ = (Unwrap LocalVariable q);
                let __qsVar1__r1__ = LocalVariable b2;
                let __qsVar2__q2__ = (Unwrap LocalVariable __qsVar1__r1__)[IntLiteral 0L];
                ((Adjoint GlobalCallable CNOT) of (LocalVariable __qsVar1__q1__, LocalVariable __qsVar2__q2__));
                for __qsVar1__item__ in (Unwrap LocalVariable __qsVar1__r1__) {
                    (GlobalCallable CNOT of (LocalVariable __qsVar1__q1__, LocalVariable __qsVar1__item__));
                    (GlobalCallable CNOT of (LocalVariable __qsVar1__q1__, LocalVariable __qsVar1__item__));
                    (GlobalCallable CNOT of (LocalVariable __qsVar1__q1__, LocalVariable __qsVar1__item__));
                }
                let _ = (GlobalCallable op0 of (Unwrap LocalVariable b2)[IntLiteral 2L]);
                let __qsVar2__q1__ = (Unwrap LocalVariable q);
                let __qsVar2__r1__ = LocalVariable b2;
                let __qsVar3__q2__ = (Unwrap LocalVariable __qsVar2__r1__)[IntLiteral 0L];
                ((Adjoint GlobalCallable CNOT) of (LocalVariable __qsVar2__q1__, LocalVariable __qsVar3__q2__));
                for __qsVar2__item__ in (Unwrap LocalVariable __qsVar2__r1__) {
                    (GlobalCallable CNOT of (LocalVariable __qsVar2__q1__, LocalVariable __qsVar2__item__));
                    (GlobalCallable CNOT of (LocalVariable __qsVar2__q1__, LocalVariable __qsVar2__item__));
                    (GlobalCallable CNOT of (LocalVariable __qsVar2__q1__, LocalVariable __qsVar2__item__));
                }
                let _ = (GlobalCallable op0 of (Unwrap LocalVariable b2)[IntLiteral 4L]);
                let __qsVar3__q1__ = (Unwrap LocalVariable q);
                let __qsVar3__r1__ = LocalVariable b2;
                let __qsVar4__q2__ = (Unwrap LocalVariable __qsVar3__r1__)[IntLiteral 0L];
                ((Adjoint GlobalCallable CNOT) of (LocalVariable __qsVar3__q1__, LocalVariable __qsVar4__q2__));
                for __qsVar3__item__ in (Unwrap LocalVariable __qsVar3__r1__) {
                    (GlobalCallable CNOT of (LocalVariable __qsVar3__q1__, LocalVariable __qsVar3__item__));
                    (GlobalCallable CNOT of (LocalVariable __qsVar3__q1__, LocalVariable __qsVar3__item__));
                    (GlobalCallable CNOT of (LocalVariable __qsVar3__q1__, LocalVariable __qsVar3__item__));
                }
            } else {
                fail "r is supposed to be Zero";
            }
        }
        QsControlled (ctrls, (q2, n2, b2, q)) {
            let q1 = LocalVariable ctrls;
            let r1 = (LocalVariable q2, LocalVariable b2);
            let __qsVar1__q2__ = (Unwrap LocalVariable r1)[IntLiteral 0L];
            ((Controlled (Adjoint GlobalCallable CNOT)) of (LocalVariable __controlQubits__, (LocalVariable q1, LocalVariable __qsVar1__q2__)));
            for item in (Unwrap LocalVariable r1) {
                ((Controlled GlobalCallable CNOT) of (LocalVariable __controlQubits__, (LocalVariable q1, LocalVariable item)));
                ((Controlled GlobalCallable CNOT) of (LocalVariable __controlQubits__, (LocalVariable q1, LocalVariable item)));
                ((Controlled GlobalCallable CNOT) of (LocalVariable __controlQubits__, (LocalVariable q1, LocalVariable item)));
            }
            let r = (GlobalCallable M of LocalVariable q2);
            if (LocalVariable r = ResultLiteral One) {
                let _ = (GlobalCallable op0 of (Unwrap LocalVariable b2)[IntLiteral 0L]);
                let __qsVar1__q1__ = LocalVariable ctrls;
                let __qsVar1__r1__ = ((Unwrap LocalVariable q), LocalVariable b2);
                let __qsVar2__q2__ = (Unwrap LocalVariable __qsVar1__r1__)[IntLiteral 0L];
                ((Controlled (Adjoint GlobalCallable CNOT)) of (LocalVariable __controlQubits__, (LocalVariable __qsVar1__q1__, LocalVariable __qsVar2__q2__)));
                for __qsVar1__item__ in (Unwrap LocalVariable __qsVar1__r1__) {
                    ((Controlled GlobalCallable CNOT) of (LocalVariable __controlQubits__, (LocalVariable __qsVar1__q1__, LocalVariable __qsVar1__item__)));
                    ((Controlled GlobalCallable CNOT) of (LocalVariable __controlQubits__, (LocalVariable __qsVar1__q1__, LocalVariable __qsVar1__item__)));
                    ((Controlled GlobalCallable CNOT) of (LocalVariable __controlQubits__, (LocalVariable __qsVar1__q1__, LocalVariable __qsVar1__item__)));
                }
                let _ = (GlobalCallable op0 of (Unwrap LocalVariable b2)[IntLiteral 1L]);
                let __qsVar2__q1__ = LocalVariable ctrls;
                let __qsVar2__r1__ = ((Unwrap LocalVariable q), LocalVariable b2);
                let __qsVar3__q2__ = (Unwrap LocalVariable __qsVar2__r1__)[IntLiteral 0L];
                ((Controlled (Adjoint GlobalCallable CNOT)) of (LocalVariable __controlQubits__, (LocalVariable __qsVar2__q1__, LocalVariable __qsVar3__q2__)));
                for __qsVar2__item__ in (Unwrap LocalVariable __qsVar2__r1__) {
                    ((Controlled GlobalCallable CNOT) of (LocalVariable __controlQubits__, (LocalVariable __qsVar2__q1__, LocalVariable __qsVar2__item__)));
                    ((Controlled GlobalCallable CNOT) of (LocalVariable __controlQubits__, (LocalVariable __qsVar2__q1__, LocalVariable __qsVar2__item__)));
                    ((Controlled GlobalCallable CNOT) of (LocalVariable __controlQubits__, (LocalVariable __qsVar2__q1__, LocalVariable __qsVar2__item__)));
                }
                let _ = (GlobalCallable op0 of (Unwrap LocalVariable b2)[IntLiteral 2L]);
                let __qsVar3__q1__ = LocalVariable ctrls;
                let __qsVar3__r1__ = ((Unwrap LocalVariable q), LocalVariable b2);
                let __qsVar4__q2__ = (Unwrap LocalVariable __qsVar3__r1__)[IntLiteral 0L];
                ((Controlled (Adjoint GlobalCallable CNOT)) of (LocalVariable __controlQubits__, (LocalVariable __qsVar3__q1__, LocalVariable __qsVar4__q2__)));
                for __qsVar3__item__ in (Unwrap LocalVariable __qsVar3__r1__) {
                    ((Controlled GlobalCallable CNOT) of (LocalVariable __controlQubits__, (LocalVariable __qsVar3__q1__, LocalVariable __qsVar3__item__)));
                    ((Controlled GlobalCallable CNOT) of (LocalVariable __controlQubits__, (LocalVariable __qsVar3__q1__, LocalVariable __qsVar3__item__)));
                    ((Controlled GlobalCallable CNOT) of (LocalVariable __controlQubits__, (LocalVariable __qsVar3__q1__, LocalVariable __qsVar3__item__)));
                }
                let _ = (GlobalCallable op0 of (Unwrap LocalVariable b2)[IntLiteral 3L]);
                let __qsVar4__q1__ = LocalVariable ctrls;
                let __qsVar4__r1__ = ((Unwrap LocalVariable q), LocalVariable b2);
                let __qsVar5__q2__ = (Unwrap LocalVariable __qsVar4__r1__)[IntLiteral 0L];
                ((Controlled (Adjoint GlobalCallable CNOT)) of (LocalVariable __controlQubits__, (LocalVariable __qsVar4__q1__, LocalVariable __qsVar5__q2__)));
                for __qsVar4__item__ in (Unwrap LocalVariable __qsVar4__r1__) {
                    ((Controlled GlobalCallable CNOT) of (LocalVariable __controlQubits__, (LocalVariable __qsVar4__q1__, LocalVariable __qsVar4__item__)));
                    ((Controlled GlobalCallable CNOT) of (LocalVariable __controlQubits__, (LocalVariable __qsVar4__q1__, LocalVariable __qsVar4__item__)));
                    ((Controlled GlobalCallable CNOT) of (LocalVariable __controlQubits__, (LocalVariable __qsVar4__q1__, LocalVariable __qsVar4__item__)));
                }
                let _ = (GlobalCallable op0 of (Unwrap LocalVariable b2)[IntLiteral 4L]);
                let __qsVar5__q1__ = LocalVariable ctrls;
                let __qsVar5__r1__ = ((Unwrap LocalVariable q), LocalVariable b2);
                let __qsVar6__q2__ = (Unwrap LocalVariable __qsVar5__r1__)[IntLiteral 0L];
                ((Controlled (Adjoint GlobalCallable CNOT)) of (LocalVariable __controlQubits__, (LocalVariable __qsVar5__q1__, LocalVariable __qsVar6__q2__)));
                for __qsVar5__item__ in (Unwrap LocalVariable __qsVar5__r1__) {
                    ((Controlled GlobalCallable CNOT) of (LocalVariable __controlQubits__, (LocalVariable __qsVar5__q1__, LocalVariable __qsVar5__item__)));
                    ((Controlled GlobalCallable CNOT) of (LocalVariable __controlQubits__, (LocalVariable __qsVar5__q1__, LocalVariable __qsVar5__item__)));
                    ((Controlled GlobalCallable CNOT) of (LocalVariable __controlQubits__, (LocalVariable __qsVar5__q1__, LocalVariable __qsVar5__item__)));
                }
                let _ = (GlobalCallable op0 of (Unwrap LocalVariable b2)[IntLiteral 5L]);
                let __qsVar6__q1__ = LocalVariable ctrls;
                let __qsVar6__r1__ = ((Unwrap LocalVariable q), LocalVariable b2);
                let __qsVar7__q2__ = (Unwrap LocalVariable __qsVar6__r1__)[IntLiteral 0L];
                ((Controlled (Adjoint GlobalCallable CNOT)) of (LocalVariable __controlQubits__, (LocalVariable __qsVar6__q1__, LocalVariable __qsVar7__q2__)));
                for __qsVar6__item__ in (Unwrap LocalVariable __qsVar6__r1__) {
                    ((Controlled GlobalCallable CNOT) of (LocalVariable __controlQubits__, (LocalVariable __qsVar6__q1__, LocalVariable __qsVar6__item__)));
                    ((Controlled GlobalCallable CNOT) of (LocalVariable __controlQubits__, (LocalVariable __qsVar6__q1__, LocalVariable __qsVar6__item__)));
                    ((Controlled GlobalCallable CNOT) of (LocalVariable __controlQubits__, (LocalVariable __qsVar6__q1__, LocalVariable __qsVar6__item__)));
                }
            }
        }
        QsControlledAdjoint (ctrls, (q2, n2, b2, q)) {
            let q1 = LocalVariable ctrls;
            let r1 = (LocalVariable q2, LocalVariable b2);
            let __qsVar1__q2__ = (Unwrap LocalVariable r1)[IntLiteral 0L];
            ((Controlled (Adjoint GlobalCallable CNOT)) of (LocalVariable __controlQubits__, (LocalVariable q1, LocalVariable __qsVar1__q2__)));
            for item in (Unwrap LocalVariable r1) {
                ((Controlled GlobalCallable CNOT) of (LocalVariable __controlQubits__, (LocalVariable q1, LocalVariable item)));
                ((Controlled GlobalCallable CNOT) of (LocalVariable __controlQubits__, (LocalVariable q1, LocalVariable item)));
                ((Controlled GlobalCallable CNOT) of (LocalVariable __controlQubits__, (LocalVariable q1, LocalVariable item)));
            }
        }
    }

    TypeConstructor BigEndianRegister (__Item1__) : BigEndianRegister {
        QsBody Intrinsic
    }

    TypeConstructor OtherTuple (__Item1__, __Item2__) : OtherTuple {
        QsBody Intrinsic
    }

    TypeConstructor OtherType (__Item1__, __Item2__) : OtherType {
        QsBody Intrinsic
    }

    TypeConstructor QubitAlias (__Item1__) : QubitAlias {
        QsBody Intrinsic
    }

    newtype BigEndianRegister = Qubit[];

    newtype OtherTuple = (OtherType, Int);

    newtype OtherType = (Int, Qubit[]);

    newtype QubitAlias = Qubit;
}